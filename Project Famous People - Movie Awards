"Project: Famous people"
In this project, you’re going to make your own table with some small set of “famous people”, then make more tables about things they do and join those to create nice human readable lists.

Project: Famous people - Movie Awards

CREATE TABLE stars (id INTEGER PRIMARY KEY,
    first_name TEXT,
    last_name TEXT,
    twitter TEXT,
    STARmeter TEXT,
    birthdate TEXT,
    following_id INTEGER);

INSERT INTO stars (first_name, last_name, twitter , STARmeter, birthdate, following_id)
    VALUES ("Selena", "Gomez", "selenagomez@SQL", "300", "4/1/1988", 10);
INSERT INTO stars (first_name, last_name, twitter, STARmeter, birthdate, following_id)
    VALUES ("Leonardo", "DiCaprio", "leodicap@SQL", "38", "9/23/1970", 6);
INSERT INTO stars (first_name, last_name, twitter, STARmeter, birthdate, following_id)
    VALUES ("Adam", "Driver", "adamdrive@SQL", "14", "1/14/1979", 2);
INSERT INTO stars (first_name, last_name, twitter, STARmeter, birthdate, following_id)
    VALUES ("Tom", "Hanks", "tomhanks@SQL", "58", "9/5/1960", 4);
INSERT INTO stars (first_name, last_name, twitter, STARmeter, birthdate, following_id)
    VALUES ("Brad", "Pitt", "bradpitt@SQL", "37", "12/17/1980", 7);


CREATE TABLE leading_role (id INTEGER PRIMARY KEY,
    stars_id INTEGER,
    movie TEXT,
    rate INTEGER);

INSERT INTO leading_role (stars_id, movie, rate)
    VALUES (4, "Joker", 8.6);
INSERT INTO leading_role (stars_id, movie, rate)
    VALUES (3, "Marriage Story", 8.1);
INSERT INTO leading_role (stars_id, movie, rate)
    VALUES (2, "Once Upon a Time... in Hollywood", 7.8);
INSERT INTO leading_role (stars_id, movie, rate)
    VALUES (1, "Pain and Glory", 7.6);
INSERT INTO leading_role (stars_id, movie, rate)
    VALUES (5, "The Two Popes", 7.6);


CREATE TABLE supporting_role (id INTEGER PRIMARY KEY,
    stars_id INTEGER,
    movie TEXT,
    rate INTEGER);

INSERT INTO supporting_role (stars_id, movie, rate)
    VALUES (5, "The Irishman", 8.0);
INSERT INTO supporting_role (stars_id, movie, rate)
    VALUES (1, "The Irishman", 8.0);
INSERT INTO supporting_role (stars_id, movie, rate)
    VALUES (2, "Once Upon a Time... in Hollywood", 7.8);
INSERT INTO supporting_role (stars_id, movie, rate)
    VALUES (4, "A Beautiful Day in the Neighborhood", 7.6);
INSERT INTO supporting_role (stars_id, movie, rate)
    VALUES (3, "The Two Popes", 7.6);


SELECT * FROM stars;

SELECT * FROM leading_role;

SELECT * FROM supporting_role;

/* cross join */
SELECT * FROM leading_role, stars;

/* implicit inner join */
SELECT * FROM leading_role, stars
    WHERE leading_role.stars_id = stars.id;
    
SELECT * FROM supporting_role, stars
    WHERE supporting_role.stars_id = stars.id;
    
/* explicit inner join - JOIN */
SELECT stars.first_name, stars.last_name, stars.twitter, leading_role.movie, leading_role.rate FROM stars
    JOIN leading_role
    ON stars.id = leading_role.stars_id
    WHERE rate > 3;

SELECT stars.first_name, stars.last_name, stars.twitter, supporting_role.movie, supporting_role.rate FROM stars
    JOIN supporting_role
    ON stars.id = supporting_role.stars_id
    WHERE rate > 4;

CREATE TABLE joint_projects (id INTEGER PRIMARY KEY,
    stars_id INTEGER,
    title TEXT);
    
INSERT INTO joint_projects (stars_id, title)
    VALUES (2, "J.Edgar 2011");
INSERT INTO joint_projects (stars_id, title)
    VALUES (5, "The Man Who Killed Don Quixote 2018");
INSERT INTO joint_projects (stars_id, title)
    VALUES (2, "Catch Me If You Can 2002");
INSERT INTO joint_projects (stars_id, title)
    VALUES (6, "Catch Me If You Can 2002");
INSERT INTO joint_projects (stars_id, title)
    VALUES (7, "The Mask of Zorro 1998");
INSERT INTO joint_projects (stars_id, title)
    VALUES (3, "Legends of the Fall 1994"); 
INSERT INTO joint_projects (stars_id, title)
    VALUES (5, "Once Upon a Time... in Hollywood 2019");
INSERT INTO joint_projects (stars_id, title)
    VALUES (4, "You Don't Know Jack 2010");
INSERT INTO joint_projects (stars_id, title)
    VALUES (3, "You Don't Know Jack 2010");
INSERT INTO joint_projects (stars_id, title)
    VALUES (3, "Ocean's Thirteen 2007");
INSERT INTO joint_projects (stars_id, title)
    VALUES (1, "Ocean's Thirteen 2007");
INSERT INTO joint_projects (stars_id, title)
    VALUES (5, "Man on Fire 1987");
INSERT INTO joint_projects (stars_id, title)
    VALUES (1, "Interview with the Vampire 1994");
INSERT INTO joint_projects (stars_id, title)
    VALUES (2, "Interview with the Vampire 1994");

SELECT * FROM joint_projects;
   
/* outer join */ 
SELECT stars.first_name, stars.last_name, joint_projects.title
    FROM stars
    LEFT OUTER JOIN joint_projects
    ON stars.id = joint_projects.stars_id;
    
SELECT id, first_name, last_name, following_id FROM stars;

/* self join */
SELECT stars.first_name, stars.last_name, following.twitter as following_twitter
    FROM stars
    JOIN stars following
    ON stars.following_id = following.id;


CREATE TABLE project_pairs (id INTEGER PRIMARY KEY,
    project1_id INTEGER,
    project2_id INTEGER);

INSERT INTO project_pairs (project1_id, project2_id)
    VALUES(21, 29);
INSERT INTO project_pairs (project1_id, project2_id)
    VALUES(28, 24);
INSERT INTO project_pairs (project1_id, project2_id)
    VALUES(25, 2);
INSERT INTO project_pairs (project1_id, project2_id)
    VALUES(1, 7);
INSERT INTO project_pairs (project1_id, project2_id)
    VALUES(8, 10); 
INSERT INTO project_pairs (project1_id, project2_id)
    VALUES(9, 11);    
INSERT INTO project_pairs (project1_id, project2_id)
    VALUES(12, 18);
INSERT INTO project_pairs (project1_id, project2_id)
    VALUES(17, 30);
INSERT INTO project_pairs (project1_id, project2_id)
    VALUES(31, 4);
INSERT INTO project_pairs (project1_id, project2_id)
    VALUES(3, 32);
INSERT INTO project_pairs (project1_id, project2_id)
    VALUES(33, 15);
INSERT INTO project_pairs (project1_id, project2_id)
    VALUES(16, 14);
INSERT INTO project_pairs (project1_id, project2_id)
    VALUES(13, 23);
INSERT INTO project_pairs (project1_id, project2_id)
    VALUES(21, 26);
INSERT INTO project_pairs (project1_id, project2_id)
    VALUES(27, 17);
    
SELECT a.title, b.title FROM project_pairs
    JOIN joint_projects a
    ON project_pairs.project1_id = a.id
    JOIN joint_projects b
    ON project_pairs.project2_id = b.id;
    
